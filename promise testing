
//promise creation part

function getpromise(){
	
	console.log('dealy data')
	
	return new Promise((resolve,reject)=>{
		
		let login=false;
		
		login ? resolve('online'):reject('offline')
	})
	
	console.log('more delay')
}


function successdata(data){
	
	console.log(`success:${data}`)
}

function failure(err){
	
	console.log(`rejected :${err}`)
}

function solved(){
	
	console.log(`solved data from promise`)
}

//promise receiver part

function start1(){
	
getpromise()
.then(successdata)
.catch(failure)
.finally(solved)
}


//promise receiver part

async function start2(){
		
	try{
		 
	    let result=await getpromise()
		
        console.log(`success:${result}`)		
	
	 }
	 
	 catch(error){
		 
		 console.log(`The Error :${error}`)
	 }
	 finally{
		 console.log('solved data');
	 }
}

//calling function

console.log('wwwwwww')
console.log('wwwwwww')
start1();
//timer
setTimeout(()=>{
	console.log("timer")
},2000)
console.log('wwwwwww')
start2();
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')
console.log('wwwwwww')


